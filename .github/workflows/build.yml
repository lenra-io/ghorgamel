name: Release

on:
  push:
    branches:
      - main
      - beta
    paths-ignore:
      - '*.md'
  pull_request:
    paths-ignore:
      - '*.md'
  workflow_dispatch:

jobs:
  get-next-version:
    name: Get next version
    runs-on: ubuntu-20.04
    continue-on-error: true # must be allow to fail
    timeout-minutes: 2
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16
    - id: get-next-version
      name: Get next version
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: npx -p conventional-changelog-conventionalcommits@5 -p @semantic-release/git -p semantic-release-export-data -p semantic-release@19 semantic-release --dry-run
    outputs:
      new-release-published: ${{ steps.get-next-version.outputs.new-release-published }}
      new-release-version: ${{ steps.get-next-version.outputs.new-release-version }}

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: 
    - get-next-version
    timeout-minutes: 10
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Install Lenra-cli
      env:
        LENRA_CLI_VERSION: v1.0.0-beta.16
      run: | 
        curl -sSLO https://github.com/lenra-io/lenra_cli/releases/download/${LENRA_CLI_VERSION}/lenra-linux-x86_64.tar.gz
        tar -xvzf lenra-linux-x86_64.tar.gz
        echo "PATH=\"${PATH}:$PWD/target/x86_64-unknown-linux-musl/release/\"" >> $GITHUB_ENV
    - name: Generate Dockerfile
      run: lenra init
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: "16"
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - id: retrieve-tags
      name: Retrieve tags
      run: |
        echo "docker-tags=$(sh -c ".github/release.sh ${{ steps.get-next-version.outputs.new-release-version }}")" >> $GITHUB_OUTPUT
    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: .
        file: .lenra/Dockerfile
        push: true
        tags: ${{ steps.retrieve-tags.outputs.docker-tags }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
    -
      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache
    - name: Release
      if: github.event_name != 'pull_request'
      env:
        GITHUB_TOKEN: ${{ secrets.WORKFLOW_GITHUB_TOKEN }}
        DOCKER_IMAGE: lenra/ghorgamel
      run: |
        sudo chown $USER:$USER .github/release.sh
        sudo chmod +x .github/release.sh
        npx -p conventional-changelog-conventionalcommits@5 \
            -p @semantic-release/git \
            -p semantic-release@19 \
          semantic-release
